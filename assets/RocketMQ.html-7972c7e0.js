import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,a as n,d as s,b as e,f as t}from"./app-8daa8f43.js";const i="/images/image-20210708001204175.png",u={},r={href:"https://www.jianshu.com/p/79fa047d06cb?utm_campaign=haruki&utm_content=note&utm_medium=reader_share&utm_source=weixin",target:"_blank",rel:"noopener noreferrer"},k={href:"https://blog.csdn.net/suman35/article/details/103011360?utm_source=app",target:"_blank",rel:"noopener noreferrer"},d={href:"https://juejin.im/post/6844903652939792392#heading-6",target:"_blank",rel:"noopener noreferrer"},m=t('<h1 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h1><h2 id="_1、什么是mq-为什么要用mq" tabindex="-1"><a class="header-anchor" href="#_1、什么是mq-为什么要用mq" aria-hidden="true">#</a> 1、什么是MQ?为什么要用MQ?</h2><p>MQ: MessageQueue, 消息队列。队列，是一种FIFO先进先出的数据结构。消息由生产者发送到MQ进行排队，然后按原来的顺序交由消息的消费者进行处理。<br> MQ的作用主要有以下三个方面:</p><ul><li><p>异步<br> 例子:快递员发快递，直接到客户家效率会很低。引入菜鸟驿站后，快递员只需要把快递放到菜鸟驿站，就可以继续发其他快递去了。客户再按自己的时间安排去菜鸟驿站取快递。</p><p>作用:异步能提高系统的响应速度、吞吐量。</p></li><li><p>解耦<br> 例子:《Thinking in JAVA》很经典,但是都是英文,我们看不懂，所以需要编辑社，将文章翻译成其他语言，这样就可以完成英语与其他语言的交流。<br> 作用:</p><p>1、服务之间进行解耦,才可以减少服务之间的影响。提高系统整体的稳定性以及可扩展性。<br> 2、另外,解耦后可以实现数据分发。生产者发送一个消息后， 可以由一个或者多个消费者进行消费，并且消费者的增加或者减少对生产者没有影响。</p></li><li><p>削峰<br> 例子:长江每年都会涨水，但是下游出水口的速度是基本稳定的，所以会涨水。引入三峡大坝后，可以把水储存起来，下游慢慢排水。<br> 作用:以稳定的系统资源应对突发的流量冲击。</p></li></ul><h2 id="_2、mq的优缺点" tabindex="-1"><a class="header-anchor" href="#_2、mq的优缺点" aria-hidden="true">#</a> 2、MQ的优缺点</h2><p>上面MQ的所用也就是使用MQ的优点。但是引入MQ也是有他的缺点的:</p><ul><li>系统可用性降低<br> 系统引入的外部依赖增多，系统的稳定性就会变差。一旦MQ宕机，对业务会产生影响。这就需要考虑如何保证MQ的高可用。</li><li>系统复杂度提高<br> 引入MQ后系统的复杂度会大大提高。以前服务之间可以进行同步的服务调用，引入MQ后，会变为异步调用，数据的链路就会变得更复杂。并且还会带来其他一些问题。比如:如何保证消费不会丢失?不会被重复调用?怎么保证消息的顺序性等问题。</li><li>消息一致性问题<br> A系统处理完业务，通过MQ发送消息给B、C系统进行后续的业务处理。如果B系统处理成功，C系统处理失败怎么办?这就需要考虑如何保证消息数据处理的一致性。</li></ul><h2 id="_3、几大mq产品特点比较" tabindex="-1"><a class="header-anchor" href="#_3、几大mq产品特点比较" aria-hidden="true">#</a> 3、几大MQ产品特点比较</h2><p>常用的MQ产品包括Kafka、RabbitMQ和RocketMQ。 我们对这三个产品做下简单的比较，重点需要理解他们的适用场景。</p><figure><img src="'+i+'" alt="image-20210708001204175" tabindex="0" loading="lazy"><figcaption>image-20210708001204175</figcaption></figure><h1 id="rocketmq架构" tabindex="-1"><a class="header-anchor" href="#rocketmq架构" aria-hidden="true">#</a> RocketMQ架构</h1><figure><img src="https://github.com/apache/rocketmq/raw/master/docs/cn/image/rocketmq_architecture_1.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h1 id="集群搭建" tabindex="-1"><a class="header-anchor" href="#集群搭建" aria-hidden="true">#</a> 集群搭建</h1><p>基于CentOS 7搭建</p><p>参考：</p>',15),v={href:"https://blog.csdn.net/mrathena/article/details/110847212",target:"_blank",rel:"noopener noreferrer"},b={href:"https://blog.csdn.net/boomlee/article/details/118068672",target:"_blank",rel:"noopener noreferrer"},h=n("h2",{id:"_1-安装java",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-安装java","aria-hidden":"true"},"#"),s(" 1.安装java")],-1),g=n("p",null,"首先需要安装 Java，因为rocketMq是基于Java编写的。",-1),f=n("p",null,"安装Java省略，可查看之前安装Java步骤",-1),y={href:"https://blog.csdn.net/qq_43644923/article/details/117442308",target:"_blank",rel:"noopener noreferrer"},S=t(`<h2 id="_2-下载" tabindex="-1"><a class="header-anchor" href="#_2-下载" aria-hidden="true">#</a> 2.下载</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 下载</span>
<span class="token function">wget</span> https://archive.apache.org/dist/rocketmq/4.7.1/rocketmq-all-4.7.1-bin-release.zip --no-check-certificate

<span class="token comment"># 解压</span>
<span class="token function">unzip</span> rocketmq-all-4.7.1-bin-release.zip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-安装" tabindex="-1"><a class="header-anchor" href="#_3-安装" aria-hidden="true">#</a> 3.安装</h2><p>准备三台虚拟机，这里特意不把每个机器的机器名定义得太过规范，比如master slave这样的，有助于更理解各项配置。这里需要配置为host，每个服务都需要配置</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>192.168.241.100 worker1
192.168.241.101 worker2
192.168.241.102 worker3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们为了便于观察，这次搭建一个2主2从异步刷盘的集群，所以我们会使用conf/2m-2s-async下的配置文件，实际项目中，为了达到高可用，一般会使用dleger。预备设计的集群情况如下：</p><table><thead><tr><th>机器名</th><th>nemaeServer节点部署</th><th>broker节点部署</th></tr></thead><tbody><tr><td>worker1</td><td>nameserver</td><td></td></tr><tr><td>worker2</td><td>nameserver</td><td>broker-a, broker-b-s</td></tr><tr><td>worker3</td><td>nameserver</td><td>broker-b,broker-a-s</td></tr></tbody></table><p>在rocketmq的config目录下可以看到rocketmq建议的各种配置方式：</p><p>2m-2s-async: 2主2从异步刷盘(吞吐量较大，但是消息可能丢失),<br> 2m-2s-sync: 2主2从同步刷盘(吞吐量会下降，但是消息更安全)，<br> 2m-noslave:2主无从(单点故障)，然后还可以直接配置broker.conf，进行单点环境配置。<br> 而dleger就是用来实现主从切换的。集群中的节点会基于Raft协议随机选举出一个leader，其他的就都是follower（从机）。通常正式环境都会采用这种方式来搭建集群。</p><table><thead><tr><th>ip</th><th>broker名称</th><th>说明</th></tr></thead><tbody><tr><td>192.168.241.101</td><td>broker-a</td><td>a主节点</td></tr><tr><td>192.168.241.101</td><td>broker-b-s</td><td>b从节点</td></tr><tr><td>192.168.241.102</td><td>broker-b</td><td>b主节点</td></tr><tr><td>192.168.241.102</td><td>borker-a-s</td><td>a从节点</td></tr></tbody></table><p>我们这次采用2m-2s-async的方式搭建集群。具体配置查看<a href="#5.%E9%85%8D%E7%BD%AEbroker">5.配置broker</a></p><h2 id="_4-配置环境变量" tabindex="-1"><a class="header-anchor" href="#_4-配置环境变量" aria-hidden="true">#</a> 4.配置环境变量</h2><p>1、rocketmq安装后一定要配置环境变量</p><p>2、所有涉及到的路径名里不能有中文或空格</p><p>3、涉及到的日志路径也不能有空格，不然rocketmq会报错找不到。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 先通过 pwd 查看当前rocketMq安装路径</span>
<span class="token punctuation">[</span>root@localhost rocketmq-all-4.7.1-bin-release<span class="token punctuation">]</span><span class="token comment"># pwd</span>
/usr/local/rocketMq/rocketmq-all-4.7.1-bin-release

<span class="token comment"># 配置环境变量位置</span>
<span class="token punctuation">[</span>root@localhost rocketmq-all-4.7.1-bin-release<span class="token punctuation">]</span><span class="token comment"># vim /etc/profile</span>

<span class="token comment"># 在/etc/profile中配置该命令</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">ROCKETMQ_HOME</span><span class="token operator">=</span>/usr/local/rocketMq/rocketmq-all-4.7.1-bin-release

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-配置broker" tabindex="-1"><a class="header-anchor" href="#_5-配置broker" aria-hidden="true">#</a> 5.配置broker</h2><p><strong>1、配置第一组broker-a</strong></p><p>在<strong>worker2</strong>上先配置borker-a的master节点。先配置2m-2s-async/broker-a.properties</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment">#所属集群名字，名字一样的节点就在同一个集群内</span>
<span class="token key attr-name">brokerClusterName</span><span class="token punctuation">=</span><span class="token value attr-value">rocketmq-cluster</span>
<span class="token comment">#broker名字，名字一样的节点就是一组主从节点。</span>
<span class="token key attr-name">brokerName</span><span class="token punctuation">=</span><span class="token value attr-value">broker-a</span>
<span class="token comment">#brokerid,0就表示是Master，&gt;0的都是表示 Slave</span>
<span class="token key attr-name">brokerId</span><span class="token punctuation">=</span><span class="token value attr-value">0</span>
<span class="token comment">#nameServer地址，分号分割</span>
<span class="token key attr-name">namesrvAddr</span><span class="token punctuation">=</span><span class="token value attr-value">worker1:9876;worker2:9876;worker3:9876</span>
<span class="token comment">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span>
<span class="token key attr-name">defaultTopicQueueNums</span><span class="token punctuation">=</span><span class="token value attr-value">4</span>
<span class="token comment">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span>
<span class="token key attr-name">autoCreateTopicEnable</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token comment">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span>
<span class="token key attr-name">autoCreateSubscriptionGroup</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token comment">#Broker 对外服务的监听端口</span>
<span class="token key attr-name">listenPort</span><span class="token punctuation">=</span><span class="token value attr-value">10911</span>
<span class="token comment">#删除文件时间点，默认凌晨 4点</span>
<span class="token key attr-name">deleteWhen</span><span class="token punctuation">=</span><span class="token value attr-value">04</span>
<span class="token comment">#文件保留时间，默认 48 小时</span>
<span class="token key attr-name">fileReservedTime</span><span class="token punctuation">=</span><span class="token value attr-value">120</span>
<span class="token comment">#commitLog每个文件的大小默认1G</span>
<span class="token key attr-name">mapedFileSizeCommitLog</span><span class="token punctuation">=</span><span class="token value attr-value">1073741824</span>
<span class="token comment">#ConsumeQueue每个文件默认存30W条，根据业务情况调整</span>
<span class="token key attr-name">mapedFileSizeConsumeQueue</span><span class="token punctuation">=</span><span class="token value attr-value">300000</span>
<span class="token comment">#destroyMapedFileIntervalForcibly=120000</span>
<span class="token comment">#redeleteHangedFileInterval=120000</span>
<span class="token comment">#检测物理文件磁盘空间</span>
<span class="token key attr-name">diskMaxUsedSpaceRatio</span><span class="token punctuation">=</span><span class="token value attr-value">88</span>
<span class="token comment">#存储路径</span>
<span class="token key attr-name">storePathRootDir</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/store</span>
<span class="token comment">#commitLog 存储路径</span>
<span class="token key attr-name">storePathCommitLog</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/store/commitlog</span>
<span class="token comment">#消费队列存储路径存储路径</span>
<span class="token key attr-name">storePathConsumeQueue</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/store/consumequeue</span>
<span class="token comment">#消息索引存储路径</span>
<span class="token key attr-name">storePathIndex</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/store/index</span>
<span class="token comment">#checkpoint 文件存储路径</span>
<span class="token key attr-name">storeCheckpoint</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/store/checkpoint</span>
<span class="token comment">#abort 文件存储路径</span>
<span class="token key attr-name">abortFile</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/store/abort</span>
<span class="token comment">#限制的消息大小</span>
<span class="token key attr-name">maxMessageSize</span><span class="token punctuation">=</span><span class="token value attr-value">65536</span>
<span class="token comment">#flushCommitLogLeastPages=4</span>
<span class="token comment">#flushConsumeQueueLeastPages=2</span>
<span class="token comment">#flushCommitLogThoroughInterval=10000</span>
<span class="token comment">#flushConsumeQueueThoroughInterval=60000</span>
<span class="token comment">#Broker 的角色</span>
<span class="token comment">#- ASYNC_MASTER 异步复制Master</span>
<span class="token comment">#- SYNC_MASTER 同步双写Master</span>
<span class="token comment">#- SLAVE</span>
<span class="token key attr-name">brokerRole</span><span class="token punctuation">=</span><span class="token value attr-value">ASYNC_MASTER</span>
<span class="token comment">#刷盘方式</span>
<span class="token comment">#- ASYNC_FLUSH 异步刷盘</span>
<span class="token comment">#- SYNC_FLUSH 同步刷盘</span>
<span class="token key attr-name">flushDiskType</span><span class="token punctuation">=</span><span class="token value attr-value">ASYNC_FLUSH</span>
<span class="token comment">#checkTransactionMessageEnable=false</span>
<span class="token comment">#发消息线程池数量</span>
<span class="token comment">#sendMessageThreadPoolNums=128</span>
<span class="token comment">#拉消息线程池数量</span>
<span class="token comment">#pullMessageThreadPoolNums=128</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该节点对应的从节点在<strong>worker3</strong>上。修改2m-2s-async/broker-a-s.properties <code>只需要修改brokerId和brokerRole</code></p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment">#所属集群名字，名字一样的节点就在同一个集群内</span>
<span class="token key attr-name">brokerClusterName</span><span class="token punctuation">=</span><span class="token value attr-value">rocketmq-cluster</span>
<span class="token comment">#broker名字，名字一样的节点就是一组主从节点。</span>
<span class="token key attr-name">brokerName</span><span class="token punctuation">=</span><span class="token value attr-value">broker-a</span>
<span class="token comment">#brokerid,0就表示是Master，&gt;0的都是表示 Slave</span>
<span class="token key attr-name">brokerId</span><span class="token punctuation">=</span><span class="token value attr-value">1</span>
<span class="token comment">#nameServer地址，分号分割</span>
<span class="token key attr-name">namesrvAddr</span><span class="token punctuation">=</span><span class="token value attr-value">worker1:9876;worker2:9876;worker3:9876</span>
<span class="token comment">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span>
<span class="token key attr-name">defaultTopicQueueNums</span><span class="token punctuation">=</span><span class="token value attr-value">4</span>
<span class="token comment">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span>
<span class="token key attr-name">autoCreateTopicEnable</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token comment">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span>
<span class="token key attr-name">autoCreateSubscriptionGroup</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token comment">#Broker 对外服务的监听端口</span>
<span class="token key attr-name">listenPort</span><span class="token punctuation">=</span><span class="token value attr-value">11011</span>
<span class="token comment">#删除文件时间点，默认凌晨 4点</span>
<span class="token key attr-name">deleteWhen</span><span class="token punctuation">=</span><span class="token value attr-value">04</span>
<span class="token comment">#文件保留时间，默认 48 小时</span>
<span class="token key attr-name">fileReservedTime</span><span class="token punctuation">=</span><span class="token value attr-value">120</span>
<span class="token comment">#commitLog每个文件的大小默认1G</span>
<span class="token key attr-name">mapedFileSizeCommitLog</span><span class="token punctuation">=</span><span class="token value attr-value">1073741824</span>
<span class="token comment">#ConsumeQueue每个文件默认存30W条，根据业务情况调整</span>
<span class="token key attr-name">mapedFileSizeConsumeQueue</span><span class="token punctuation">=</span><span class="token value attr-value">300000</span>
<span class="token comment">#destroyMapedFileIntervalForcibly=120000</span>
<span class="token comment">#redeleteHangedFileInterval=120000</span>
<span class="token comment">#检测物理文件磁盘空间</span>
<span class="token key attr-name">diskMaxUsedSpaceRatio</span><span class="token punctuation">=</span><span class="token value attr-value">88</span>
<span class="token comment">#存储路径</span>
<span class="token key attr-name">storePathRootDir</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/storeSlave</span>
<span class="token comment">#commitLog 存储路径</span>
<span class="token key attr-name">storePathCommitLog</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/storeSlave/commitlog</span>
<span class="token comment">#消费队列存储路径存储路径</span>
<span class="token key attr-name">storePathConsumeQueue</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/storeSlave/consumequeue</span>
<span class="token comment">#消息索引存储路径</span>
<span class="token key attr-name">storePathIndex</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/storeSlave/index</span>
<span class="token comment">#checkpoint 文件存储路径</span>
<span class="token key attr-name">storeCheckpoint</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/storeSlave/checkpoint</span>
<span class="token comment">#abort 文件存储路径</span>
<span class="token key attr-name">abortFile</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/storeSlave/abort</span>
<span class="token comment">#限制的消息大小</span>
<span class="token key attr-name">maxMessageSize</span><span class="token punctuation">=</span><span class="token value attr-value">65536</span>
<span class="token comment">#flushCommitLogLeastPages=4</span>
<span class="token comment">#flushConsumeQueueLeastPages=2</span>
<span class="token comment">#flushCommitLogThoroughInterval=10000</span>
<span class="token comment">#flushConsumeQueueThoroughInterval=60000</span>
<span class="token comment">#Broker 的角色</span>
<span class="token comment">#- ASYNC_MASTER 异步复制Master</span>
<span class="token comment">#- SYNC_MASTER 同步双写Master</span>
<span class="token comment">#- SLAVE</span>
<span class="token key attr-name">brokerRole</span><span class="token punctuation">=</span><span class="token value attr-value">SLAVE</span>
<span class="token comment">#刷盘方式</span>
<span class="token comment">#- ASYNC_FLUSH 异步刷盘</span>
<span class="token comment">#- SYNC_FLUSH 同步刷盘</span>
<span class="token key attr-name">flushDiskType</span><span class="token punctuation">=</span><span class="token value attr-value">ASYNC_FLUSH</span>
<span class="token comment">#checkTransactionMessageEnable=false</span>
<span class="token comment">#发消息线程池数量</span>
<span class="token comment">#sendMessageThreadPoolNums=128</span>
<span class="token comment">#拉消息线程池数量</span>
<span class="token comment">#pullMessageThreadPoolNums=128</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2、配置第二组Broker-b</strong></p><p>这一组broker的主节点在<strong>worker3</strong>上，所以需要配置worker3上的config/2m-2s-async/broker-b.properties</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment">#所属集群名字，名字一样的节点就在同一个集群内</span>
<span class="token key attr-name">brokerClusterName</span><span class="token punctuation">=</span><span class="token value attr-value">rocketmq-cluster</span>
<span class="token comment">#broker名字，名字一样的节点就是一组主从节点。</span>
<span class="token key attr-name">brokerName</span><span class="token punctuation">=</span><span class="token value attr-value">broker-b</span>
<span class="token comment">#brokerid,0就表示是Master，&gt;0的都是表示 Slave</span>
<span class="token key attr-name">brokerId</span><span class="token punctuation">=</span><span class="token value attr-value">0</span>
<span class="token comment">#nameServer地址，分号分割</span>
<span class="token key attr-name">namesrvAddr</span><span class="token punctuation">=</span><span class="token value attr-value">worker1:9876;worker2:9876;worker3:9876</span>
<span class="token comment">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span>
<span class="token key attr-name">defaultTopicQueueNums</span><span class="token punctuation">=</span><span class="token value attr-value">4</span>
<span class="token comment">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span>
<span class="token key attr-name">autoCreateTopicEnable</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token comment">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span>
<span class="token key attr-name">autoCreateSubscriptionGroup</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token comment">#Broker 对外服务的监听端口</span>
<span class="token key attr-name">listenPort</span><span class="token punctuation">=</span><span class="token value attr-value">10911</span>
<span class="token comment">#删除文件时间点，默认凌晨 4点</span>
<span class="token key attr-name">deleteWhen</span><span class="token punctuation">=</span><span class="token value attr-value">04</span>
<span class="token comment">#文件保留时间，默认 48 小时</span>
<span class="token key attr-name">fileReservedTime</span><span class="token punctuation">=</span><span class="token value attr-value">120</span>
<span class="token comment">#commitLog每个文件的大小默认1G</span>
<span class="token key attr-name">mapedFileSizeCommitLog</span><span class="token punctuation">=</span><span class="token value attr-value">1073741824</span>
<span class="token comment">#ConsumeQueue每个文件默认存30W条，根据业务情况调整</span>
<span class="token key attr-name">mapedFileSizeConsumeQueue</span><span class="token punctuation">=</span><span class="token value attr-value">300000</span>
<span class="token comment">#destroyMapedFileIntervalForcibly=120000</span>
<span class="token comment">#redeleteHangedFileInterval=120000</span>
<span class="token comment">#检测物理文件磁盘空间</span>
<span class="token key attr-name">diskMaxUsedSpaceRatio</span><span class="token punctuation">=</span><span class="token value attr-value">88</span>
<span class="token comment">#存储路径</span>
<span class="token key attr-name">storePathRootDir</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/store</span>
<span class="token comment">#commitLog 存储路径</span>
<span class="token key attr-name">storePathCommitLog</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/store/commitlog</span>
<span class="token comment">#消费队列存储路径存储路径</span>
<span class="token key attr-name">storePathConsumeQueue</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/store/consumequeue</span>
<span class="token comment">#消息索引存储路径</span>
<span class="token key attr-name">storePathIndex</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/store/index</span>
<span class="token comment">#checkpoint 文件存储路径</span>
<span class="token key attr-name">storeCheckpoint</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/store/checkpoint</span>
<span class="token comment">#abort 文件存储路径</span>
<span class="token key attr-name">abortFile</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/store/abort</span>
<span class="token comment">#限制的消息大小</span>
<span class="token key attr-name">maxMessageSize</span><span class="token punctuation">=</span><span class="token value attr-value">65536</span>
<span class="token comment">#flushCommitLogLeastPages=4</span>
<span class="token comment">#flushConsumeQueueLeastPages=2</span>
<span class="token comment">#flushCommitLogThoroughInterval=10000</span>
<span class="token comment">#flushConsumeQueueThoroughInterval=60000</span>
<span class="token comment">#Broker 的角色</span>
<span class="token comment">#- ASYNC_MASTER 异步复制Master</span>
<span class="token comment">#- SYNC_MASTER 同步双写Master</span>
<span class="token comment">#- SLAVE</span>
<span class="token key attr-name">brokerRole</span><span class="token punctuation">=</span><span class="token value attr-value">ASYNC_MASTER</span>
<span class="token comment">#刷盘方式</span>
<span class="token comment">#- ASYNC_FLUSH 异步刷盘</span>
<span class="token comment">#- SYNC_FLUSH 同步刷盘</span>
<span class="token key attr-name">flushDiskType</span><span class="token punctuation">=</span><span class="token value attr-value">ASYNC_FLUSH</span>
<span class="token comment">#checkTransactionMessageEnable=false</span>
<span class="token comment">#发消息线程池数量</span>
<span class="token comment">#sendMessageThreadPoolNums=128</span>
<span class="token comment">#拉消息线程池数量</span>
<span class="token comment">#pullMessageThreadPoolNums=128</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后他对应的slave在worker2上，修改work2上的 conf/2m-2s-async/broker-b-s.properties</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment">#所属集群名字，名字一样的节点就在同一个集群内</span>
<span class="token key attr-name">brokerClusterName</span><span class="token punctuation">=</span><span class="token value attr-value">rocketmq-cluster</span>
<span class="token comment">#broker名字，名字一样的节点就是一组主从节点。</span>
<span class="token key attr-name">brokerName</span><span class="token punctuation">=</span><span class="token value attr-value">broker-b</span>
<span class="token comment">#brokerid,0就表示是Master，&gt;0的都是表示 Slave</span>
<span class="token key attr-name">brokerId</span><span class="token punctuation">=</span><span class="token value attr-value">1</span>
<span class="token comment">#nameServer地址，分号分割</span>
<span class="token key attr-name">namesrvAddr</span><span class="token punctuation">=</span><span class="token value attr-value">worker1:9876;worker2:9876;worker3:9876</span>
<span class="token comment">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span>
<span class="token key attr-name">defaultTopicQueueNums</span><span class="token punctuation">=</span><span class="token value attr-value">4</span>
<span class="token comment">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span>
<span class="token key attr-name">autoCreateTopicEnable</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token comment">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span>
<span class="token key attr-name">autoCreateSubscriptionGroup</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token comment">#Broker 对外服务的监听端口</span>
<span class="token key attr-name">listenPort</span><span class="token punctuation">=</span><span class="token value attr-value">11011</span>
<span class="token comment">#删除文件时间点，默认凌晨 4点</span>
<span class="token key attr-name">deleteWhen</span><span class="token punctuation">=</span><span class="token value attr-value">04</span>
<span class="token comment">#文件保留时间，默认 48 小时</span>
<span class="token key attr-name">fileReservedTime</span><span class="token punctuation">=</span><span class="token value attr-value">120</span>
<span class="token comment">#commitLog每个文件的大小默认1G</span>
<span class="token key attr-name">mapedFileSizeCommitLog</span><span class="token punctuation">=</span><span class="token value attr-value">1073741824</span>
<span class="token comment">#ConsumeQueue每个文件默认存30W条，根据业务情况调整</span>
<span class="token key attr-name">mapedFileSizeConsumeQueue</span><span class="token punctuation">=</span><span class="token value attr-value">300000</span>
<span class="token comment">#destroyMapedFileIntervalForcibly=120000</span>
<span class="token comment">#redeleteHangedFileInterval=120000</span>
<span class="token comment">#检测物理文件磁盘空间</span>
<span class="token key attr-name">diskMaxUsedSpaceRatio</span><span class="token punctuation">=</span><span class="token value attr-value">88</span>
<span class="token comment">#存储路径</span>
<span class="token key attr-name">storePathRootDir</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/storeSlave</span>
<span class="token comment">#commitLog 存储路径</span>
<span class="token key attr-name">storePathCommitLog</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/storeSlave/commitlog</span>
<span class="token comment">#消费队列存储路径存储路径</span>
<span class="token key attr-name">storePathConsumeQueue</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/storeSlave/consumequeue</span>
<span class="token comment">#消息索引存储路径</span>
<span class="token key attr-name">storePathIndex</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/storeSlave/index</span>
<span class="token comment">#checkpoint 文件存储路径</span>
<span class="token key attr-name">storeCheckpoint</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/storeSlave/checkpoint</span>
<span class="token comment">#abort 文件存储路径</span>
<span class="token key attr-name">abortFile</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/rocketmq/storeSlave/abort</span>
<span class="token comment">#限制的消息大小</span>
<span class="token key attr-name">maxMessageSize</span><span class="token punctuation">=</span><span class="token value attr-value">65536</span>
<span class="token comment">#flushCommitLogLeastPages=4</span>
<span class="token comment">#flushConsumeQueueLeastPages=2</span>
<span class="token comment">#flushCommitLogThoroughInterval=10000</span>
<span class="token comment">#flushConsumeQueueThoroughInterval=60000</span>
<span class="token comment">#Broker 的角色</span>
<span class="token comment">#- ASYNC_MASTER 异步复制Master</span>
<span class="token comment">#- SYNC_MASTER 同步双写Master</span>
<span class="token comment">#- SLAVE</span>
<span class="token key attr-name">brokerRole</span><span class="token punctuation">=</span><span class="token value attr-value">SLAVE</span>
<span class="token comment">#刷盘方式</span>
<span class="token comment">#- ASYNC_FLUSH 异步刷盘</span>
<span class="token comment">#- SYNC_FLUSH 同步刷盘</span>
<span class="token key attr-name">flushDiskType</span><span class="token punctuation">=</span><span class="token value attr-value">ASYNC_FLUSH</span>
<span class="token comment">#checkTransactionMessageEnable=false</span>
<span class="token comment">#发消息线程池数量</span>
<span class="token comment">#sendMessageThreadPoolNums=128</span>
<span class="token comment">#拉消息线程池数量</span>
<span class="token comment">#pullMessageThreadPoolNums=128</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样broker就配置完成了。</p><p>需要注意的配置项：</p><p>1、同一机器上两个实例的store目录不能相同，否则会报错 Lock failed,MQ already started</p><p>2、同一机器上两个实例的listenPort也不能相同。否则会报端口占用的错</p><p>nameserver不需要进行配置，直接启动就行。这也看出nameserver是无状态的。</p><p>3、其他的配置项参见《RcoketMQ全部配置表.pdf》</p><h2 id="_6-启动" tabindex="-1"><a class="header-anchor" href="#_6-启动" aria-hidden="true">#</a> 6.启动</h2><p><strong>先启动nameServer</strong></p><p>修改三个节点上的bin/runserver.sh，调整里面的jvm内存配置。找到下面这一行调整下内存</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">JAVA_OPT</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${JAVA_OPT}</span> -server -Xms512m -Xmx512m -Xmn256m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>直接在三个节点上启动nameServer。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>nohup sh mqnamesrv &amp;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动时需要注意，要在rocketmq文件夹下的bin文件下执行这个命令，否则要通过路径../到bin路径下</p><p><strong>启动状态检查</strong></p><p>启动完成后，在nohup.out里看到这一条关键日志就是启动成功了。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Java HotSpot™ <span class="token number">64</span>-Bit Server VM warning: Using the DefNew young collector with the CMS collector is deprecated and will likely be removed <span class="token keyword">in</span> a future release
Java HotSpot™ <span class="token number">64</span>-Bit Server VM warning: UseCMSCompactAtFullCollection is deprecated and will likely be removed <span class="token keyword">in</span> a future release.
The Name Server boot success. <span class="token assign-left variable">serializeType</span><span class="token operator">=</span>JSON
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用jps指令可以看到一个NamesrvStartup进程。</p><p>这里也看到，RocketMQ在runserver.sh中是使用的CMS垃圾回收期，而在runbroker.sh中使用的是G1垃圾回收期。</p><p><strong>再启动broker</strong></p><p>修改worker2、worker3节点上的bin/runbroker.sh，调整里面的jvm内存配置。找到下面这一行调整下内存。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">JAVA_OPT</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${JAVA_OPT}</span> -server -Xms512m -Xmx512m -Xmn256m&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>不修改此配置默认为8G，启动会因为内存不够而出现下面的异常</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Java HotSpot<span class="token punctuation">(</span>TM<span class="token punctuation">)</span> <span class="token number">64</span>-Bit Server VM warning: INFO: os::commit_memory<span class="token punctuation">(</span>0x00000005c0000000, <span class="token number">8589934592</span>, <span class="token number">0</span><span class="token punctuation">)</span> failed<span class="token punctuation">;</span> <span class="token assign-left variable">error</span><span class="token operator">=</span><span class="token string">&#39;Cannot allocate memory&#39;</span> <span class="token punctuation">(</span>errno<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>
<span class="token comment"># Java运行时环境的内存不足，无法继续运行。本地内存分配(mmap)映射8589934592字节(8G)提交预留内存失败</span>
<span class="token comment"># There is insufficient memory for the Java Runtime Environment to continue.</span>
<span class="token comment"># Native memory allocation (mmap) failed to map 8589934592 bytes for committing reserved memory.</span>
<span class="token comment"># An error report file with more information is saved as:</span>
<span class="token comment"># /usr/local/software/rocketmq/hs_err_pid1669.log</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动broker是使用的mqbroker指令，只是注意启动broker时需要通过-c 指定对应的配置文件。</p><p>在<strong>worker2</strong>上启动broker-a的master节点和broker-b的slave节点</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>nohup ./mqbroker -c ../conf/2m-2s-async/broker-a.properties &amp;
nohup ./mqbroker -c ../conf/2m-2s-async/broker-b-s.properties &amp;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在work3上启动broker-b的master节点和broker-a的slave节点</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>nohup ./mqbroker -c ../conf/2m-2s-async/broker-b.properties &amp;
nohup ./mqbroker -c ../conf/2m-2s-async/broker-a-s.properties &amp;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>启动slave时，如果遇到报错 Lock failed,MQ already started ，那是因为有多个实例共用了同一个storePath造成的，这时就需要调整store的路径。</p><p><strong>启动状态检查</strong></p><p>使用jps指令，能看到一个NameSrvStartup进程和两个BrokerStartup进程。</p><p>nohup.out中也有启动成功的日志。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>The broker<span class="token punctuation">[</span>broker-a, <span class="token number">192.168</span>.241.102:11011<span class="token punctuation">]</span> boot success. <span class="token assign-left variable">serializeType</span><span class="token operator">=</span>JSON and name server is worker1:9876<span class="token punctuation">;</span>worker2:9876<span class="token punctuation">;</span>worker3:9876
The broker<span class="token punctuation">[</span>broker-b, <span class="token number">192.168</span>.241.102:10911<span class="token punctuation">]</span> boot success. <span class="token assign-left variable">serializeType</span><span class="token operator">=</span>JSON and name server is worker1:9876<span class="token punctuation">;</span>worker2:9876<span class="token punctuation">;</span>worker3:9876
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-访问" tabindex="-1"><a class="header-anchor" href="#_7-访问" aria-hidden="true">#</a> 7.访问</h2><p>很多人在配置完毕之后两台RocketMQ的broker和nameserver都运行起来了，但是通过broker的日志发现一直报如下错误：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>remoting<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span>RemotingConnectException</span><span class="token operator">:</span> connect <span class="token keyword">to</span> <span class="token operator">&lt;</span><span class="token number">192.168</span><span class="token number">.140</span><span class="token number">.128</span><span class="token operator">:</span><span class="token number">9876</span><span class="token operator">&gt;</span> failed
	at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>remoting<span class="token punctuation">.</span>netty<span class="token punctuation">.</span></span>NettyRemotingClient</span><span class="token punctuation">.</span><span class="token function">invokeSync</span><span class="token punctuation">(</span><span class="token class-name">NettyRemotingClient</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">641</span><span class="token punctuation">)</span> <span class="token operator">~</span><span class="token punctuation">[</span>rocketmq<span class="token operator">-</span>remoting<span class="token operator">-</span><span class="token number">3.2</span><span class="token number">.6</span><span class="token punctuation">.</span>jar<span class="token operator">:</span>na<span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>broker<span class="token punctuation">.</span>out<span class="token punctuation">.</span></span>BrokerOuterAPI</span><span class="token punctuation">.</span><span class="token function">registerBroker</span><span class="token punctuation">(</span><span class="token class-name">BrokerOuterAPI</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">153</span><span class="token punctuation">)</span> <span class="token operator">~</span><span class="token punctuation">[</span>rocketmq<span class="token operator">-</span>broker<span class="token operator">-</span><span class="token number">3.2</span><span class="token number">.6</span><span class="token punctuation">.</span>jar<span class="token operator">:</span>na<span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>broker<span class="token punctuation">.</span>out<span class="token punctuation">.</span></span>BrokerOuterAPI</span><span class="token punctuation">.</span><span class="token function">registerBrokerAll</span><span class="token punctuation">(</span><span class="token class-name">BrokerOuterAPI</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span> <span class="token operator">~</span><span class="token punctuation">[</span>rocketmq<span class="token operator">-</span>broker<span class="token operator">-</span><span class="token number">3.2</span><span class="token number">.6</span><span class="token punctuation">.</span>jar<span class="token operator">:</span>na<span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>broker<span class="token punctuation">.</span></span>BrokerController</span><span class="token punctuation">.</span><span class="token function">registerBrokerAll</span><span class="token punctuation">(</span><span class="token class-name">BrokerController</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">591</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>rocketmq<span class="token operator">-</span>broker<span class="token operator">-</span><span class="token number">3.2</span><span class="token number">.6</span><span class="token punctuation">.</span>jar<span class="token operator">:</span>na<span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>broker<span class="token punctuation">.</span></span>BrokerController</span>$<span class="token number">7.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">BrokerController</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">561</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>rocketmq<span class="token operator">-</span>broker<span class="token operator">-</span><span class="token number">3.2</span><span class="token number">.6</span><span class="token punctuation">.</span>jar<span class="token operator">:</span>na<span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>Executors</span>$<span class="token class-name">RunnableAdapter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Executors</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">471</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>na<span class="token operator">:</span><span class="token number">1.7</span><span class="token number">.0_79</span><span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>FutureTask</span><span class="token punctuation">.</span><span class="token function">runAndReset</span><span class="token punctuation">(</span><span class="token class-name">FutureTask</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">304</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>na<span class="token operator">:</span><span class="token number">1.7</span><span class="token number">.0_79</span><span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ScheduledThreadPoolExecutor</span>$<span class="token class-name">ScheduledFutureTask</span><span class="token punctuation">.</span>access$<span class="token function">301</span><span class="token punctuation">(</span><span class="token class-name">ScheduledThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">178</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>na<span class="token operator">:</span><span class="token number">1.7</span><span class="token number">.0_79</span><span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ScheduledThreadPoolExecutor</span>$<span class="token class-name">ScheduledFutureTask</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ScheduledThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">293</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>na<span class="token operator">:</span><span class="token number">1.7</span><span class="token number">.0_79</span><span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span><span class="token punctuation">.</span><span class="token function">runWorker</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1145</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>na<span class="token operator">:</span><span class="token number">1.7</span><span class="token number">.0_79</span><span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span>$<span class="token class-name">Worker</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">615</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>na<span class="token operator">:</span><span class="token number">1.7</span><span class="token number">.0_79</span><span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">745</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>na<span class="token operator">:</span><span class="token number">1.7</span><span class="token number">.0_79</span><span class="token punctuation">]</span>
<span class="token number">2018</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">10</span> <span class="token number">21</span><span class="token operator">:</span><span class="token number">22</span><span class="token operator">:</span><span class="token number">25</span> <span class="token constant">INFO</span> <span class="token class-name">BrokerControllerScheduledThread1</span> <span class="token operator">-</span> slave fall behind master<span class="token punctuation">,</span> how much<span class="token punctuation">,</span> <span class="token number">0</span> bytes
<span class="token number">2018</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">10</span> <span class="token number">21</span><span class="token operator">:</span><span class="token number">22</span><span class="token operator">:</span><span class="token number">26</span> <span class="token constant">INFO</span> <span class="token class-name">BrokerControllerScheduledThread1</span> <span class="token operator">-</span> register broker <span class="token keyword">to</span> <span class="token namespace">name</span> server <span class="token number">192.168</span><span class="token number">.140</span><span class="token number">.129</span><span class="token operator">:</span><span class="token number">9876</span> <span class="token constant">OK</span>
<span class="token number">2018</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">10</span> <span class="token number">21</span><span class="token operator">:</span><span class="token number">22</span><span class="token operator">:</span><span class="token number">26</span> <span class="token constant">WARN</span> <span class="token class-name">BrokerControllerScheduledThread1</span> <span class="token operator">-</span> registerBroker <span class="token class-name">Exception</span><span class="token punctuation">,</span> <span class="token number">192.168</span><span class="token number">.140</span><span class="token number">.128</span><span class="token operator">:</span><span class="token number">9876</span>
<span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>remoting<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span>RemotingConnectException</span><span class="token operator">:</span> connect <span class="token keyword">to</span> <span class="token operator">&lt;</span><span class="token number">192.168</span><span class="token number">.140</span><span class="token number">.128</span><span class="token operator">:</span><span class="token number">9876</span><span class="token operator">&gt;</span> failed
	at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>remoting<span class="token punctuation">.</span>netty<span class="token punctuation">.</span></span>NettyRemotingClient</span><span class="token punctuation">.</span><span class="token function">invokeSync</span><span class="token punctuation">(</span><span class="token class-name">NettyRemotingClient</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">641</span><span class="token punctuation">)</span> <span class="token operator">~</span><span class="token punctuation">[</span>rocketmq<span class="token operator">-</span>remoting<span class="token operator">-</span><span class="token number">3.2</span><span class="token number">.6</span><span class="token punctuation">.</span>jar<span class="token operator">:</span>na<span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>broker<span class="token punctuation">.</span>out<span class="token punctuation">.</span></span>BrokerOuterAPI</span><span class="token punctuation">.</span><span class="token function">registerBroker</span><span class="token punctuation">(</span><span class="token class-name">BrokerOuterAPI</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">153</span><span class="token punctuation">)</span> <span class="token operator">~</span><span class="token punctuation">[</span>rocketmq<span class="token operator">-</span>broker<span class="token operator">-</span><span class="token number">3.2</span><span class="token number">.6</span><span class="token punctuation">.</span>jar<span class="token operator">:</span>na<span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>broker<span class="token punctuation">.</span>out<span class="token punctuation">.</span></span>BrokerOuterAPI</span><span class="token punctuation">.</span><span class="token function">registerBrokerAll</span><span class="token punctuation">(</span><span class="token class-name">BrokerOuterAPI</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span> <span class="token operator">~</span><span class="token punctuation">[</span>rocketmq<span class="token operator">-</span>broker<span class="token operator">-</span><span class="token number">3.2</span><span class="token number">.6</span><span class="token punctuation">.</span>jar<span class="token operator">:</span>na<span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>broker<span class="token punctuation">.</span></span>BrokerController</span><span class="token punctuation">.</span><span class="token function">registerBrokerAll</span><span class="token punctuation">(</span><span class="token class-name">BrokerController</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">591</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>rocketmq<span class="token operator">-</span>broker<span class="token operator">-</span><span class="token number">3.2</span><span class="token number">.6</span><span class="token punctuation">.</span>jar<span class="token operator">:</span>na<span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>broker<span class="token punctuation">.</span></span>BrokerController</span>$<span class="token number">7.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">BrokerController</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">561</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>rocketmq<span class="token operator">-</span>broker<span class="token operator">-</span><span class="token number">3.2</span><span class="token number">.6</span><span class="token punctuation">.</span>jar<span class="token operator">:</span>na<span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>Executors</span>$<span class="token class-name">RunnableAdapter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Executors</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">471</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>na<span class="token operator">:</span><span class="token number">1.7</span><span class="token number">.0_79</span><span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>FutureTask</span><span class="token punctuation">.</span><span class="token function">runAndReset</span><span class="token punctuation">(</span><span class="token class-name">FutureTask</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">304</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>na<span class="token operator">:</span><span class="token number">1.7</span><span class="token number">.0_79</span><span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ScheduledThreadPoolExecutor</span>$<span class="token class-name">ScheduledFutureTask</span><span class="token punctuation">.</span>access$<span class="token function">301</span><span class="token punctuation">(</span><span class="token class-name">ScheduledThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">178</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>na<span class="token operator">:</span><span class="token number">1.7</span><span class="token number">.0_79</span><span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ScheduledThreadPoolExecutor</span>$<span class="token class-name">ScheduledFutureTask</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ScheduledThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">293</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>na<span class="token operator">:</span><span class="token number">1.7</span><span class="token number">.0_79</span><span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span><span class="token punctuation">.</span><span class="token function">runWorker</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1145</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>na<span class="token operator">:</span><span class="token number">1.7</span><span class="token number">.0_79</span><span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span>$<span class="token class-name">Worker</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">615</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>na<span class="token operator">:</span><span class="token number">1.7</span><span class="token number">.0_79</span><span class="token punctuation">]</span>
	at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">745</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>na<span class="token operator">:</span><span class="token number">1.7</span><span class="token number">.0_79</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>出现上述问题不用太慌，首先要做几件事<br> 1、相互之间ping一下看看能不能通;<br> 2、ping一下外网看看能不能通(一般使用桥接模式);如果上述两个都通，那说明网络上应该是没什么问题的.<br> 3、看看后台进程中是否有开启相应的服务，如果有9876端口，那就说明是正常的</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>netstat -ntlp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>4、相互之间telnet一下</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>telnet 192.168.140.128 9876
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果未安装telnet，可以通过如下命令进行安装：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum list telnet*    查看telnet相关的安装包
yum install telnet-server  安装telnet服务
yum install telnet.*  安装telnet客户端
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一般情况出现上述错误这边telnet应该是不通的，原因是防火墙开着，我们需要将防火墙关闭.</p><p>1、firewall防火墙</p><p>（1）首先查看防火墙的状态</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>systemctl status firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（2）如果防火墙开着，那么将其关闭</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>systemctl stop firewalld
systemctl disable firewalld    #禁止firewall开机启动
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>2、iptables防火墙</p><p>这个很容易被忽视，或者是一不小心被打开，步骤依然如上<br> （1）先查看其状态</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>service iptables status
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（2）如果开着将其关闭</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>service iptables stop                --临时关闭防火墙
chkconfig iptables off               --永久关闭防火墙
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-运行" tabindex="-1"><a class="header-anchor" href="#_8-运行" aria-hidden="true">#</a> 8.运行</h2><p>出现发送超时</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Exception in thread &quot;main&quot; org.apache.rocketmq.remoting.exception.RemotingTooMuchRequestException: sendDefaultImpl call timeout
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>解决方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>producer<span class="token punctuation">.</span><span class="token function">setSendMsgTimeout</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="n-控制台安装" tabindex="-1"><a class="header-anchor" href="#n-控制台安装" aria-hidden="true">#</a> n.控制台安装</h2><h1 id="什么是ack" tabindex="-1"><a class="header-anchor" href="#什么是ack" aria-hidden="true">#</a> 什么是ACK？</h1><h1 id="源码分析" tabindex="-1"><a class="header-anchor" href="#源码分析" aria-hidden="true">#</a> 源码分析</h1><p>源码分析基于rocketmq-client-4.3.0</p><h2 id="事务mq源码解析" tabindex="-1"><a class="header-anchor" href="#事务mq源码解析" aria-hidden="true">#</a> 事务MQ源码解析</h2><h3 id="producer端" tabindex="-1"><a class="header-anchor" href="#producer端" aria-hidden="true">#</a> Producer端</h3><ol><li><p>org.apache.rocketmq.client.producer.TransactionMQProducer#sendMessageInTransaction</p><p>判断有没有实现事务监听</p><p>发送事务MQ</p></li><li><p>org.apache.rocketmq.client.impl.producer.DefaultMQProducerImpl#sendMessageInTransaction</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">TransactionSendResult</span> <span class="token function">sendMessageInTransaction</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Message</span> msg<span class="token punctuation">,</span>
                                                      <span class="token keyword">final</span> <span class="token class-name">TransactionListener</span> tranExecuter<span class="token punctuation">,</span> 
                                                      <span class="token keyword">final</span> <span class="token class-name">Object</span> arg<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name">MQClientException</span> <span class="token punctuation">{</span>
    <span class="token comment">// 参数校验</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> tranExecuter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">MQClientException</span><span class="token punctuation">(</span><span class="token string">&quot;tranExecutor is null&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Validators</span><span class="token punctuation">.</span><span class="token function">checkMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQProducer<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">SendResult</span> sendResult <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token comment">// 设置事务消息标识</span>
    <span class="token class-name">MessageAccessor</span><span class="token punctuation">.</span><span class="token function">putProperty</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token class-name">MessageConst</span><span class="token punctuation">.</span><span class="token constant">PROPERTY_TRANSACTION_PREPARED</span><span class="token punctuation">,</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">MessageAccessor</span><span class="token punctuation">.</span><span class="token function">putProperty</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token class-name">MessageConst</span><span class="token punctuation">.</span><span class="token constant">PROPERTY_PRODUCER_GROUP</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQProducer<span class="token punctuation">.</span><span class="token function">getProducerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// 发送半（half）消息</span>
        sendResult <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">MQClientException</span><span class="token punctuation">(</span><span class="token string">&quot;send message Exception&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">LocalTransactionState</span> localTransactionState <span class="token operator">=</span> <span class="token class-name">LocalTransactionState</span><span class="token punctuation">.</span><span class="token constant">UNKNOW</span><span class="token punctuation">;</span>
    <span class="token class-name">Throwable</span> localException <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>sendResult<span class="token punctuation">.</span><span class="token function">getSendStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token constant">SEND_OK</span><span class="token operator">:</span> <span class="token punctuation">{</span>	<span class="token comment">// 发送成功</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>sendResult<span class="token punctuation">.</span><span class="token function">getTransactionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    msg<span class="token punctuation">.</span><span class="token function">putUserProperty</span><span class="token punctuation">(</span><span class="token string">&quot;__transactionId__&quot;</span><span class="token punctuation">,</span> sendResult<span class="token punctuation">.</span><span class="token function">getTransactionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token class-name">String</span> transactionId <span class="token operator">=</span> msg<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token class-name">MessageConst</span><span class="token punctuation">.</span><span class="token constant">PROPERTY_UNIQ_CLIENT_MESSAGE_ID_KEYIDX</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> transactionId <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">&quot;&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>transactionId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    msg<span class="token punctuation">.</span><span class="token function">setTransactionId</span><span class="token punctuation">(</span>transactionId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// 发送成功，执行本地事务</span>
                localTransactionState <span class="token operator">=</span> tranExecuter<span class="token punctuation">.</span><span class="token function">executeLocalTransaction</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> localTransactionState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    localTransactionState <span class="token operator">=</span> <span class="token class-name">LocalTransactionState</span><span class="token punctuation">.</span><span class="token constant">UNKNOW</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>localTransactionState <span class="token operator">!=</span> <span class="token class-name">LocalTransactionState</span><span class="token punctuation">.</span><span class="token constant">COMMIT_MESSAGE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;executeLocalTransactionBranch return {}&quot;</span><span class="token punctuation">,</span> localTransactionState<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;executeLocalTransactionBranch exception&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                localException <span class="token operator">=</span> e<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token constant">FLUSH_DISK_TIMEOUT</span><span class="token operator">:</span>
        <span class="token keyword">case</span> <span class="token constant">FLUSH_SLAVE_TIMEOUT</span><span class="token operator">:</span>
        <span class="token keyword">case</span> <span class="token constant">SLAVE_NOT_AVAILABLE</span><span class="token operator">:</span>
            localTransactionState <span class="token operator">=</span> <span class="token class-name">LocalTransactionState</span><span class="token punctuation">.</span><span class="token constant">ROLLBACK_MESSAGE</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// 给broker反馈本地事务执行状态</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">endTransaction</span><span class="token punctuation">(</span>sendResult<span class="token punctuation">,</span> localTransactionState<span class="token punctuation">,</span> localException<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;local transaction execute &quot;</span> <span class="token operator">+</span> localTransactionState <span class="token operator">+</span> <span class="token string">&quot;, but end broker transaction failed&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">TransactionSendResult</span> transactionSendResult <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransactionSendResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    transactionSendResult<span class="token punctuation">.</span><span class="token function">setSendStatus</span><span class="token punctuation">(</span>sendResult<span class="token punctuation">.</span><span class="token function">getSendStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    transactionSendResult<span class="token punctuation">.</span><span class="token function">setMessageQueue</span><span class="token punctuation">(</span>sendResult<span class="token punctuation">.</span><span class="token function">getMessageQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    transactionSendResult<span class="token punctuation">.</span><span class="token function">setMsgId</span><span class="token punctuation">(</span>sendResult<span class="token punctuation">.</span><span class="token function">getMsgId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    transactionSendResult<span class="token punctuation">.</span><span class="token function">setQueueOffset</span><span class="token punctuation">(</span>sendResult<span class="token punctuation">.</span><span class="token function">getQueueOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    transactionSendResult<span class="token punctuation">.</span><span class="token function">setTransactionId</span><span class="token punctuation">(</span>sendResult<span class="token punctuation">.</span><span class="token function">getTransactionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    transactionSendResult<span class="token punctuation">.</span><span class="token function">setLocalTransactionState</span><span class="token punctuation">(</span>localTransactionState<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> transactionSendResult<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>发送消息成功之后,如何知道消息是否发送成功呢？在RabbitMq中会有消息发送确认机制，mq会返回给消息一个ack标识。</p><p>RocketMq提供了四种发送返回信息状态,分别对应着在不同的场景下消息发送的状态</p><ul><li><p>FLUSH_DISK_TIMEOUT：表示没有在规定时间内完成刷盘（需要Broker的刷盘策略被设置成SYNC_FLUSH才会报这个错误）。</p></li><li><p>FLUSH_SLAVE_TIMEOUT：表示在主备方式下，并且Broker被设置成SYNC_MASTER方式，没有在设定时间内完成主从同步。</p></li><li><p>SLAVE_NOT_AVAILABLE：这个状态产生的场景和FLUSH_SLAVE_TIMEOUT类似，表示在主备方式下，并且Broker被设置成SYNC_MASTER，但是没有找到被配置成Slave的Broker。</p></li><li><p>SEND_OK：表示发送成功，发送成功的具体含义，比如消息是否已经被存储到磁盘？消息是否被同步到了Slave上？消息在Slave上是否被写入磁盘？需要结合所配置的刷盘策略、主从策略来定。这个状态还可以简单理解为，没有发生上面列出的三个问题状态就是SEND_OK。</p></li></ul></li></ol><h1 id="项目中的问题" tabindex="-1"><a class="header-anchor" href="#项目中的问题" aria-hidden="true">#</a> 项目中的问题</h1><h2 id="问题1-rocketmq-mqclientexception-the-producer-service-state-not-ok-create-just" tabindex="-1"><a class="header-anchor" href="#问题1-rocketmq-mqclientexception-the-producer-service-state-not-ok-create-just" aria-hidden="true">#</a> 问题1：RocKetMQ : MQClientException: The producer service state not OK, CREATE_JUST</h2><h3 id="问题场景" tabindex="-1"><a class="header-anchor" href="#问题场景" aria-hidden="true">#</a> <strong>问题场景</strong>：</h3><p>当项目中出现两种类型的MQ，一种是事务型MQ，另外一种是普通MQ，想要将事务MQ变更为普通MQ，需要同时注入两个Producer，当在发送MQ是出现此异常</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>jd<span class="token punctuation">.</span>ins<span class="token punctuation">.</span>barley<span class="token punctuation">.</span>underwriting<span class="token punctuation">.</span>mq<span class="token punctuation">.</span>producer</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>common<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ThreadFactoryBuilder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>jd<span class="token punctuation">.</span>ins<span class="token punctuation">.</span>barley<span class="token punctuation">.</span>underwriting<span class="token punctuation">.</span>constant<span class="token punctuation">.</span></span><span class="token class-name">SystemConst</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>jd<span class="token punctuation">.</span>ins<span class="token punctuation">.</span>barley<span class="token punctuation">.</span>underwriting<span class="token punctuation">.</span>mq<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">ProducerConfig</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>jd<span class="token punctuation">.</span>ins<span class="token punctuation">.</span>barley<span class="token punctuation">.</span>underwriting<span class="token punctuation">.</span>service<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">UnderwritingProcessConfig</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">RequiredArgsConstructor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQClientException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>producer<span class="token punctuation">.</span></span><span class="token class-name">DefaultMQProducer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>producer<span class="token punctuation">.</span></span><span class="token class-name">MQProducer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>producer<span class="token punctuation">.</span></span><span class="token class-name">TransactionMQProducer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Primary</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">LinkedBlockingQueue</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ThreadPoolExecutor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeUnit</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * class description:
 *
 * <span class="token keyword">@author</span> yuanshancheng
 * <span class="token keyword">@date</span> 2021/5/21
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@RequiredArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProducerConfiguration</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 发送者配置
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ProducerConfig</span> config<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 事务消息监听逻辑
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">TransactionListenerImpl</span> transactionListener<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 消息类型key
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">MSG_TYPE_KEY</span> <span class="token operator">=</span> <span class="token string">&quot;transactionType&quot;</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 承保配置
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">UnderwritingProcessConfig</span> underwritingProcessConfig<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">&quot;transactionMQProducer&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">MQProducer</span> <span class="token function">transactionMQProducer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">TransactionMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransactionMQProducer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// mq 服务地址</span>
        producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">getNameServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 生产者组</span>
        producer<span class="token punctuation">.</span><span class="token function">setProducerGroup</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">getGroupName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 发送失败时的最大重试次数</span>
        producer<span class="token punctuation">.</span><span class="token function">setRetryTimesWhenSendFailed</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">getRetryTimesWhenSendFailed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 将发送结果不等于 StoreOK 的情况进行重试</span>
        <span class="token comment">// 发送结果不等于 StoreOK 不是发送失败，而是不能保证成功</span>
        producer<span class="token punctuation">.</span><span class="token function">setRetryAnotherBrokerWhenNotStoreOK</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 事务消息执行器</span>
        producer<span class="token punctuation">.</span><span class="token function">setTransactionListener</span><span class="token punctuation">(</span>transactionListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 事务消息检查线程次默认是线程数固定为1，等待队列长度1000，默认的拒绝策略</span>
        producer<span class="token punctuation">.</span><span class="token function">setExecutorService</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>
                <span class="token class-name">SystemConst</span><span class="token punctuation">.</span><span class="token constant">CPUS</span><span class="token punctuation">,</span>
                <span class="token class-name">SystemConst</span><span class="token punctuation">.</span><span class="token constant">CPUS</span> <span class="token operator">*</span> underwritingProcessConfig<span class="token punctuation">.</span><span class="token function">getTransactionCheckCoefficient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token comment">// 弹性部分的线程的空闲存活时间</span>
                <span class="token number">5</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">,</span>
                <span class="token comment">// 同步队列，超核心线程数立刻创建新线程</span>
                <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>underwritingProcessConfig<span class="token punctuation">.</span><span class="token function">getTransactionCheckBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token comment">// 配置线程名称</span>
                <span class="token keyword">new</span> <span class="token class-name">ThreadFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setNameFormat</span><span class="token punctuation">(</span><span class="token string">&quot;TransactionCheck-%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;producer(groupName={}) init rocketMQ success!&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">getGroupName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MQClientException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;producer(groupName={}) init rocketMQ fail!&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">getGroupName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> producer<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Primary</span>
    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">&quot;defaultMQProducer&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">MQProducer</span> <span class="token function">defaultMQProducer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">DefaultMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQProducer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// mq 服务地址</span>
        producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">getNameServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 生产者组</span>
        producer<span class="token punctuation">.</span><span class="token function">setProducerGroup</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">getDefaultGroupName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 发送失败时的最大重试次数</span>
        producer<span class="token punctuation">.</span><span class="token function">setRetryTimesWhenSendFailed</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">getRetryTimesWhenSendFailed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 将发送结果不等于 StoreOK 的情况进行重试</span>
        <span class="token comment">// 发送结果不等于 StoreOK 不是发送失败，而是不能保证成功</span>
        producer<span class="token punctuation">.</span><span class="token function">setRetryAnotherBrokerWhenNotStoreOK</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;producer(groupName={}) init rocketMQ success!&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">getGroupName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MQClientException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;producer(groupName={}) init rocketMQ fail!&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">getGroupName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> producer<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * 生产者
     */</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">&quot;transactionMQProducer&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">MQProducer</span> producer<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">&quot;defaultMQProducer&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">MQProducer</span> defaultMQProducer<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="问题原因" tabindex="-1"><a class="header-anchor" href="#问题原因" aria-hidden="true">#</a> 问题原因：</h3><p>原因 producerGroup 重复，事务MQ、普通MQ的Producer，使用完全一样的topic、group</p><h3 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案" aria-hidden="true">#</a> 解决方案：</h3><p>替换group，不影响两个MQ发送及消费</p>`,102);function w(x,T){const a=o("ExternalLinkIcon");return c(),l("div",null,[n("p",null,[n("a",r,[s("https://www.jianshu.com/p/79fa047d06cb?utm_campaign=haruki&utm_content=note&utm_medium=reader_share&utm_source=weixin"),e(a)])]),n("p",null,[n("a",k,[s("https://blog.csdn.net/suman35/article/details/103011360?utm_source=app"),e(a)])]),n("p",null,[n("a",d,[s("https://juejin.im/post/6844903652939792392#heading-6"),e(a)])]),m,n("p",null,[n("a",v,[s("https://blog.csdn.net/mrathena/article/details/110847212"),e(a)])]),n("p",null,[n("a",b,[s("https://blog.csdn.net/boomlee/article/details/118068672"),e(a)])]),h,g,f,n("p",null,[n("a",y,[s("https://blog.csdn.net/qq_43644923/article/details/117442308"),e(a)])]),S])}const q=p(u,[["render",w],["__file","RocketMQ.html.vue"]]);export{q as default};
