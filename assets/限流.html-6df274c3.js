const e=JSON.parse('{"key":"v-6a0c8bd0","path":"/data/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/%E9%99%90%E6%B5%81.html","title":"限流","lang":"zh-CN","frontmatter":{"title":"限流","index":true,"category":["使用指南"],"description":"限流就是在某个时间窗口对资源访问做限制，比如设定每秒最多100个访问请求。 限流维度 时间： 限流基于某段时间范围或者某个时间点，也就是我们常说的“时间窗口”，比如对每分钟、每秒钟的时间窗口做限定。 资源： 基于可用资源的限制，比如设定最大访问次数，或最高可用连接数。 QPS和连接数控制 在真实环境中，通常会设置多个维度的限流规则，比如设定同一个IP每秒访问频率小于10，连接数小于5，再设定每台机器QPS最高1000，连接数最大保持200。 更进一步，还可以把某个服务器组或整个机房的服务器当做一个整体，设置更high-level的限流规则，这些所有限流规则都会共同作用于流量控制。","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/data/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/%E9%99%90%E6%B5%81.html"}],["meta",{"property":"og:title","content":"限流"}],["meta",{"property":"og:description","content":"限流就是在某个时间窗口对资源访问做限制，比如设定每秒最多100个访问请求。 限流维度 时间： 限流基于某段时间范围或者某个时间点，也就是我们常说的“时间窗口”，比如对每分钟、每秒钟的时间窗口做限定。 资源： 基于可用资源的限制，比如设定最大访问次数，或最高可用连接数。 QPS和连接数控制 在真实环境中，通常会设置多个维度的限流规则，比如设定同一个IP每秒访问频率小于10，连接数小于5，再设定每台机器QPS最高1000，连接数最大保持200。 更进一步，还可以把某个服务器组或整个机房的服务器当做一个整体，设置更high-level的限流规则，这些所有限流规则都会共同作用于流量控制。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-11T15:09:55.000Z"}],["meta",{"property":"article:author","content":"Fearless"}],["meta",{"property":"article:modified_time","content":"2023-12-11T15:09:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"限流\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-11T15:09:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Fearless\\"}]}"]]},"headers":[{"level":2,"title":"限流维度","slug":"限流维度","link":"#限流维度","children":[{"level":3,"title":"QPS和连接数控制","slug":"qps和连接数控制","link":"#qps和连接数控制","children":[]},{"level":3,"title":"传输速率","slug":"传输速率","link":"#传输速率","children":[]},{"level":3,"title":"黑白名单","slug":"黑白名单","link":"#黑白名单","children":[]},{"level":3,"title":"分布式环境","slug":"分布式环境","link":"#分布式环境","children":[]}]},{"level":2,"title":"限流方案常用算法","slug":"限流方案常用算法","link":"#限流方案常用算法","children":[{"level":3,"title":"令牌桶算法","slug":"令牌桶算法","link":"#令牌桶算法","children":[]},{"level":3,"title":"漏桶算法","slug":"漏桶算法","link":"#漏桶算法","children":[]},{"level":3,"title":"滑动窗口","slug":"滑动窗口","link":"#滑动窗口","children":[]}]},{"level":2,"title":"常用的限流方案","slug":"常用的限流方案","link":"#常用的限流方案","children":[{"level":3,"title":"合法性验证限流","slug":"合法性验证限流","link":"#合法性验证限流","children":[]},{"level":3,"title":"Guava限流","slug":"guava限流","link":"#guava限流","children":[]},{"level":3,"title":"网关层限流","slug":"网关层限流","link":"#网关层限流","children":[]},{"level":3,"title":"Nginx限流","slug":"nginx限流","link":"#nginx限流","children":[]},{"level":3,"title":"中间件限流","slug":"中间件限流","link":"#中间件限流","children":[]},{"level":3,"title":"限流组件","slug":"限流组件","link":"#限流组件","children":[]}]},{"level":2,"title":"从架构维度考虑限流设计","slug":"从架构维度考虑限流设计","link":"#从架构维度考虑限流设计","children":[]},{"level":2,"title":"Tomcat限流","slug":"tomcat限流","link":"#tomcat限流","children":[]}],"git":{"createdTime":1702307395000,"updatedTime":1702307395000,"contributors":[{"name":"pzy","email":"66700800@qq.com","commits":1}]},"readingTime":{"minutes":19.01,"words":5704},"filePathRelative":"data/系统架构/限流.md","localizedDate":"2023年12月11日","excerpt":"<p>限流就是在某个时间窗口对资源访问做限制，比如设定每秒最多100个访问请求。</p>\\n<h2> <strong>限流维度</strong></h2>\\n<p><strong>时间：</strong> 限流基于某段时间范围或者某个时间点，也就是我们常说的“时间窗口”，比如对每分钟、每秒钟的时间窗口做限定。<br>\\n<strong>资源：</strong> 基于可用资源的限制，比如设定最大访问次数，或最高可用连接数。<br>\\n</p>\\n<br>\\n<h3> <strong>QPS和连接数控制</strong></h3>\\n<p>在真实环境中，通常会设置多个维度的限流规则，比如设定同一个IP每秒访问频率小于10，连接数小于5，再设定每台机器QPS最高1000，连接数最大保持200。<br>\\n更进一步，还可以把某个服务器组或整个机房的服务器当做一个整体，设置更high-level的限流规则，这些所有限流规则都会共同作用于流量控制。</p>","autoDesc":true}');export{e as data};
